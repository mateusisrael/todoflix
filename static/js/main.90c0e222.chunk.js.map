{"version":3,"sources":["img/capitc3a3o-fantc3a1stico1.png","img/images1.png","img/claquete.svg","components/Appbar.js","components/MyList.js","components/AddFilmesModal.js","components/CategoriasModal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Appbar","props","state","className","onClick","this","changeCategoriaModal","renderModal","changeAddFilmeModal","React","Component","MyList","filtrarStatus","filme","status","filtrarAvaliacao","nota","filtrarCategoria","categoria","renderFilme","img_path","src","titulo","descricao","renderTitulo","filmes","map","undefined","AddFilmesModal","avaliar","console","log","setState","clickAddFilme","event","preventDefault","novo_filme","id","filmes_cont","AddFilme","cancelar","alert","clickCancelar","class","claquete","alt","onChange","target","value","type","name","required","placeholder","notaAtual","clickAvaliar","Avaliacao","estrelas","estrela","CategoriasModal","mudarCategoria","n_categoria","mostrarNVistos","mostrarJaVistos","App","clickChangeAddFilmeModal","add_filmes_modal","abrirModal","length","fecharModal","n_filme","concat","categorias_modal","addfilmes_modal","capitao_img","corra_img","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,uD,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,4LCGtBC,G,kBACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAQf,OACI,4BAAQC,UAAU,UACd,0BAAMA,UAAU,QAAhB,YACI,yBAAKA,UAAU,OACX,4BAAQC,QAAUC,KAAKJ,MAAMK,qBAAuBH,UAAU,qBAA9D,aAEME,KAAKJ,MAAMM,eAIjB,4BAAQH,QAASC,KAAKJ,MAAMO,oBAAqBL,UAAU,UAA3D,yB,GAnBYM,IAAMC,YCDrBC,E,YAEjB,WAAYV,GAAQ,IAAD,8BACf,4CAAMA,KAGVW,cAAgB,SAACC,GACb,OAAOA,EAAMC,QACT,IAAK,QAAS,OAAQ,yBAAKX,UAAU,mBAAmBU,EAAMC,QAC9D,IAAK,YAAa,OAAQ,yBAAKX,UAAU,oBAAoBU,EAAMC,QACnE,QAAS,OAAQ,yBAAKX,UAAU,uBAAuBU,EAAMC,UARlD,EAYnBC,iBAAmB,SAACF,GAEhB,OAAGA,EAAMG,MAAQ,EAAU,yBAAKb,UAAU,kBAAkBU,EAAMG,MAC1DH,EAAMG,MAAQ,EAAU,yBAAKb,UAAU,oBAAoBU,EAAMG,MACjEH,EAAMG,MAAQ,EAAU,yBAAKb,UAAU,iBAAiBU,EAAMG,MAC1D,yBAAKb,UAAU,uBAAuBU,EAAMG,OAjBzC,EAoBnBC,iBAAmB,SAACJ,GAEhB,OAAGA,EAAMC,SAAW,EAAKb,MAAMiB,UACpB,EAAKC,YAAYN,QAExB,GAzBW,EA6BnBM,YAAc,SAACN,GAEX,OACI,yBAAKV,UAAU,mBACT,EAAKY,iBAAiBF,GACxB,yBAAKV,UAAU,uBACU,KAAnBU,EAAMO,SAAkB,yBAAKjB,UAAU,MAAMkB,IAAKR,EAAMO,WACpD,yBAAKjB,UAAU,OAAf,eAGR,EAAKS,cAAcC,GACrB,4BAAKA,EAAMS,QACX,yBAAKnB,UAAU,kBACX,2BAAIU,EAAMU,cA1CP,EAgDnBC,aAAe,WACX,OAAO,EAAKvB,MAAMiB,WACd,IAAK,QAAS,OAAO,6CACrB,IAAK,YAAa,OAAO,0CACzB,QAAS,OAAO,8CApDL,E,sEAwDT,IAAD,OACL,OACI,yBAAKf,UAAU,UACX,yBAAKA,UAAU,mBACTE,KAAKmB,gBAEX,yBAAKrB,UAAU,gBAEPE,KAAKJ,MAAMwB,OAAOC,KAAI,SAACb,GACnB,YAA4Bc,IAAzB,EAAK1B,MAAMiB,UACH,EAAKC,YAAYN,GAEjB,EAAKI,iBAAiBJ,Y,GAtEzBJ,IAAMC,W,iDCErBkB,E,YACjB,WAAY3B,GAAQ,IAAD,8BACf,4CAAMA,KAUV4B,QAAU,SAACb,GACPc,QAAQC,IAAI,UAAWf,GACvB,EAAKgB,SAAS,CACVhB,KAAMA,KAdK,EAkBnBiB,cAAgB,SAACC,GAGb,GAFAA,EAAMC,iBAEmB,KAAtB,EAAKjC,MAAMoB,QAAuC,KAAtB,EAAKpB,MAAMY,QAAqC,IAApB,EAAKZ,MAAMc,KAAY,CAC9E,IAAIoB,EAAa,CACbC,GAAI,EAAKpC,MAAMqC,YACfhB,OAAQ,EAAKpB,MAAMoB,OACnBC,UAAW,EAAKrB,MAAMqB,UACtBT,OAAQ,EAAKZ,MAAMY,OACnBM,SAAU,EAAKlB,MAAMkB,SACrBJ,KAAM,EAAKd,MAAMc,MAErB,EAAKf,MAAMsC,SAASH,GACpB,EAAKnC,MAAMuC,gBAEXC,MAAM,4DAjCK,EAuCnBC,cAAgB,SAACR,GACbA,EAAMC,iBACN,EAAKlC,MAAMuC,YAvCX,EAAKtC,MAAQ,CACToB,YAAQK,EACRJ,UAAW,GACXT,OAAQ,GACRM,SAAU,GACVJ,KAAM,GAPK,E,sEA8CT,IAAD,OACL,OACI,yBAAKb,UAAU,WACX,6BAASA,UAAU,kBACf,yBAAKA,UAAU,qBACX,4BAAQwC,MAAM,YACV,yBAAKtB,IAAKuB,IAAUC,IAAI,cAE5B,6BAAS1C,UAAU,sBACf,qDACA,0BAAMA,UAAU,wBACZ,wCACA,2BAAO2C,SACH,SAAAZ,GAAK,OAAI,EAAKF,SAAS,CAAEV,OAAQY,EAAMa,OAAOC,SAChDC,KAAK,OAAOC,KAAK,OAAOC,UAAQ,IAElC,mDACA,2BAAOL,SACH,SAAAZ,GAAK,OAAI,EAAKF,SAAS,CAAET,UAAWW,EAAMa,OAAOC,SACnDC,KAAK,OAAOC,KAAK,cAEnB,0CACA,2BAAOJ,SACH,SAAAZ,GAAK,OAAI,EAAKF,SAAS,CAAElB,OAAQoB,EAAMa,OAAOC,SAChDC,KAAK,OAAOC,KAAK,SAASE,YAAY,kBAAkBD,UAAQ,IAElE,2DACA,yBAAKR,MAAM,mBACP,2BAAOG,SACH,SAAAZ,GAAK,OAAI,EAAKF,SAAS,CAAEZ,SAAUc,EAAMa,OAAOC,SAClDC,KAAK,OAAOC,KAAK,aACnB,4BAAQ9C,QACJ,SAAC8B,GAAYA,EAAMC,kBACrBhC,UAAU,eAFZ,qBAKJ,wCACI,kBAAC,EAAD,CAAWkD,UAAWhD,KAAKH,MAAMc,KAAMsC,aAAcjD,KAAKwB,UAE9D,yBAAK1B,UAAU,oBACX,4BAAQC,QAASC,KAAKqC,cAAevC,UAAU,kBAA/C,YACA,4BAAQC,QAASC,KAAK4B,cAAe9B,UAAU,eAA/C,mB,GAxFQM,IAAMC,WAsG5C6C,E,YACF,WAAYtD,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTc,KAAM,EAENwC,SAAU,CACN,CAACnB,GAAI,GAAI,CAACA,GAAI,GAAI,CAACA,GAAI,GAAI,CAACA,GAAI,GAAI,CAACA,GAAI,KANnC,E,sEAWR,IAAD,OACL,OAEI,yBAAKlC,UAAU,aAEPE,KAAKH,MAAMsD,SAAS9B,KAAI,SAAA+B,GACpB,OAAGA,EAAQpB,IAAM,EAAKpC,MAAMoD,UAEpB,4BAAQjD,QACJ,SAAC8B,GACGA,EAAMC,iBACN,EAAKlC,MAAMqD,aAAaG,EAAQpB,KAEtClC,UAAU,gBAEVsD,EAAQpB,GAAK,EAAKpC,MAAMoD,UAE1B,4BAAQjD,QACJ,SAAC8B,GACGA,EAAMC,iBACN,EAAKlC,MAAMqD,aAAaG,EAAQpB,KAEtClC,UAAU,sBAPb,U,GA3BPM,IAAMC,WCxGTgD,E,YAEjB,WAAYzD,GAAQ,IAAD,8BACf,4CAAMA,KAGV0D,eAAiB,SAACC,GACd,EAAK3D,MAAM0D,eAAeC,IALX,E,sEASf,OACI,yBAAKzD,UAAU,mBACX,yBAAKC,QAASC,KAAKJ,MAAM4D,eAAgB1D,UAAU,cAAnD,aACA,yBAAKC,QAASC,KAAKJ,MAAM6D,gBAAiB3D,UAAU,cAApD,qB,GAd6BM,IAAMC,WCQ9BqD,E,YACnB,WAAY9D,GAAO,IAAD,8BAChB,4CAAMA,KAqCR+D,yBAA2B,WACzB,EAAKhC,SAAS,CACViC,kBAAmB,EAAK/D,MAAM+D,oBAxClB,EA4ClBC,WAAa,WACX,OACI,kBAAC,EAAD,CACE5B,YAAa,EAAKpC,MAAMuB,OAAO0C,OAC/B5B,SAAU,EAAKA,SACfC,SAAU,EAAKwB,4BAjDL,EAsDlBI,YAAc,WACZ,OACE,GAxDc,EA4DlB7B,SAAW,SAAC8B,GACV,EAAKrC,SAAS,CACZP,OAAQ,EAAKvB,MAAMuB,OAAO6C,OAAOD,MA9DnB,EAkElB/D,qBAAuB,WACrB,EAAK0B,SAAS,CACVuC,kBAAmB,EAAKrE,MAAMqE,oBApElB,EAwElBhE,YAAc,WACZ,OAAO,EAAKL,MAAMqE,kBACd,KAAK,EAAM,OACT,kBAAC,EAAD,CACEV,eAAgB,EAAKA,eACrBC,gBAAiB,EAAKA,kBAG1B,KAAK,EAAO,SAhFA,EAoFlBA,gBAAkB,WAChB,EAAK9B,SAAS,CACZd,UAAW,WAtFG,EA0FlB2C,eAAiB,WACf,EAAK7B,SAAS,CACZd,UAAW,eA1Fb,EAAKhB,MAAQ,CACXsE,iBAAiB,EACjB/C,OAAQ,CACN,CACIY,GAAI,EACJf,OAAQ,2BACRC,UAAW,6QACXT,OAAQ,YACRM,SAAUqD,IACVzD,KAAM,GAEV,CACIqB,GAAI,EACJf,OAAQ,SACRC,UAAW,uHACXT,OAAQ,YACRM,SAAUsD,IACV1D,KAAM,GAEV,CACEqB,GAAI,EACJf,OAAQ,cACRC,UAAW,yMACXT,OAAQ,QACRM,SAAU,mEACVJ,KAAM,IAIVE,eAAWS,GA/BG,E,sEAkGhB,OACE,yBAAKxB,UAAU,OACb,8BACEE,KAAKH,MAAM+D,iBAAmB5D,KAAK6D,aAAe7D,KAAK+D,cACzD,kBAAC,EAAD,CACE7D,YAAaF,KAAKE,YAClBD,qBAAsBD,KAAKC,qBAC3BE,oBAAqBH,KAAK2D,2BAG1B,yBAAK7D,UAAU,SACf,kBAAC,EAAD,CAAQe,UAAWb,KAAKH,MAAMgB,UAAWO,OAAQpB,KAAKH,MAAMuB,e,GA9GrChB,IAAMC,WCEnBiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.90c0e222.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/capitc3a3o-fantc3a1stico1.91acda5f.png\";","module.exports = __webpack_public_path__ + \"static/media/images1.409ce39a.png\";","module.exports = __webpack_public_path__ + \"static/media/claquete.ecbf8238.svg\";","import React from 'react';\n\n\nexport default class Appbar extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return(\n            <header className=\"Appbar\">\n                <span className=\"logo\">ToDoFlix</span>\n                    <nav className=\"row\">\n                        <button onClick={ this.props.changeCategoriaModal } className=\"categorias-button\">\n                            categorias\n                            { this.props.renderModal() }\n                        </button>\n                        \n\n                        <button onClick={this.props.changeAddFilmeModal} className=\"button\">\n                            Adicionar Filme\n                        </button>\n                        \n                    </nav>\n\n                    \n            </header>\n            \n        );\n    }\n}\n\n","import React from 'react';\n\nexport default class MyList extends React.Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    filtrarStatus = (filme) => {\n        switch(filme.status){\n            case 'ja vi': return( <div className=\"statusbar-visto\">{filme.status}</div> );\n            case 'quero ver': return( <div className=\"statusbar-nvisto\">{filme.status}</div> );\n            default: return( <div className=\"statusbar-undefined\">{filme.status}</div> );\n        }\n    }\n\n    filtrarAvaliacao = (filme) => {\n\n        if(filme.nota >= 4) return <div className=\"nota-high-cont\">{filme.nota}</div>;\n        else if(filme.nota >= 3) return <div className=\"nota-medium-cont\">{filme.nota}</div>;\n        else if(filme.nota <= 2) return <div className=\"nota-low-cont\">{filme.nota}</div>;\n        else return <div className=\"nota-cont-undefined\">{filme.nota}</div>\n    }\n\n    filtrarCategoria = (filme) => {\n\n        if(filme.status === this.props.categoria) {\n            return this.renderFilme(filme);\n        } else {\n            return;\n        }\n    }\n\n    renderFilme = (filme) => {\n\n        return(\n            <div className=\"filme-container\">\n                { this.filtrarAvaliacao(filme) } \n                <div className=\"filme-img-container\">\n                    { filme.img_path !== '' ? <img className=\"img\" src={filme.img_path}></img>\n                        : <div className=\"box\">sem imagem</div>\n                    }\n                </div>\n                { this.filtrarStatus(filme) }\n                <h2>{filme.titulo}</h2>\n                <div className=\"descricao-cont\">\n                    <p>{filme.descricao}</p>\n                </div>\n            </div>\n        );\n    }\n\n    renderTitulo = () => {\n        switch(this.props.categoria){\n            case \"ja vi\": return <h1>JÃ¡ Vistos:</h1>;\n            case \"quero ver\": return <h1>Quero Ver:</h1>;\n            default: return <h1>Minha Lista:</h1>;\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"MyList\">\n                <div className=\"title-container\">\n                    { this.renderTitulo() }\n                </div>\n                <div className=\"filmes-lista\">\n                    {\n                        this.props.filmes.map((filme) => {\n                            if(this.props.categoria === undefined) {\n                                return this.renderFilme(filme)\n                            } else {\n                                return this.filtrarCategoria(filme);\n                            }\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n} \n\n","import React from 'react';\nimport claquete from '../img/claquete.svg';\n\n\nexport default class AddFilmesModal extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            titulo: undefined,\n            descricao: '',\n            status: '',\n            img_path: '',\n            nota: 0,\n        }\n    }\n\n    avaliar = (nota) => {\n        console.log(\"avaliar\", nota);\n        this.setState({\n            nota: nota,\n        })\n    }\n\n    clickAddFilme = (event) => {\n        event.preventDefault();\n\n        if(this.state.titulo !== '' && this.state.status !== '' && this.state.nota !== 0) {\n            let novo_filme = {\n                id: this.props.filmes_cont,\n                titulo: this.state.titulo,\n                descricao: this.state.descricao,\n                status: this.state.status,\n                img_path: this.state.img_path,\n                nota: this.state.nota,\n            }\n            this.props.AddFilme(novo_filme);\n            this.props.cancelar();\n        } else {\n            alert(`Preencha o campo \"Nome\", \"Status\" e nota para continuar`);\n        }\n        \n        \n    }\n\n    clickCancelar = (event) => {\n        event.preventDefault();\n        this.props.cancelar();\n    }\n\n\n\n    render() {\n        return(\n            <div className=\"overlay\">\n                <section className=\"addFilmesModal\">\n                    <div className=\"modal-padding row\">\n                        <figure class=\"claquete\">\n                            <img src={claquete} alt=\"claquete\"></img>\n                        </figure>\n                        <section className=\"add-filmes-section\">\n                            <h1>Adicionar novo Filme:</h1>\n                            <form className=\"adicionar-filme-form\">\n                                <label>Nome:</label>\n                                <input onChange={\n                                    event => this.setState({ titulo: event.target.value })\n                                } type=\"text\" name=\"nome\" required></input>\n\n                                <label>DescriÃ§Ã£o:</label>\n                                <input onChange={\n                                    event => this.setState({ descricao: event.target.value })\n                                } type=\"text\" name=\"descricao\"></input>\n\n                                <label>Status:</label>\n                                <input onChange={\n                                    event => this.setState({ status: event.target.value }) \n                                } type=\"text\" name=\"status\" placeholder=\"quero ver/ja vi\" required></input>\n\n                                <label>Imagem de exibiÃ§Ã£o</label>\n                                <div class=\"form-select-img\">\n                                    <input onChange={\n                                        event => this.setState({ img_path: event.target.value })\n                                    } type=\"text\" name=\"img_path\"></input>\n                                    <button onClick={\n                                        (event) => { event.preventDefault() }\n                                    } className=\"form-button\">Adicionar Imagem</button>\n                                </div>\n\n                                <label>Nota:</label>\n                                    <Avaliacao notaAtual={this.state.nota} clickAvaliar={this.avaliar}/>\n\n                                <div className=\"botoes-form-cont\">\n                                    <button onClick={this.clickCancelar} className=\"unfocus-button\">cancelar</button>\n                                    <button onClick={this.clickAddFilme} className=\"form-button\">feito</button>\n                                </div>\n\n                            </form>\n                        </section>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\n\n\nclass Avaliacao extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            nota: 0,\n\n            estrelas: [\n                {id: 1}, {id: 2}, {id: 3}, {id: 4}, {id: 5}\n            ]\n        }\n    }\n\n    render() {\n        return(\n\n            <div className=\"stars-row\">\n                {\n                    this.state.estrelas.map(estrela => {\n                        if(estrela.id <= this.props.notaAtual) {\n                            return (\n                                <button onClick={\n                                    (event) => {\n                                        event.preventDefault();\n                                        this.props.clickAvaliar(estrela.id)\n                                    }\n                                } className=\"star-enable\"></button>\n                            );\n                        } else if(estrela.id > this.props.notaAtual) {\n                            return(\n                                <button onClick={\n                                    (event) => {\n                                        event.preventDefault();\n                                        this.props.clickAvaliar(estrela.id)\n                                    }\n                                } className=\"star-disable\"></button>\n                            );\n                        }\n                    })\n                }\n\n            </div>\n        );\n    }\n\n}","import React from 'react';\n\nexport default class CategoriasModal extends React.Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    mudarCategoria = (n_categoria) => {\n        this.props.mudarCategoria(n_categoria);\n    }\n\n    render() {\n        return(\n            <nav className=\"CategoriasModal\">\n                <div onClick={this.props.mostrarNVistos} className=\"modal-item\">Quero Ver</div>\n                <div onClick={this.props.mostrarJaVistos} className=\"modal-item\">JÃ¡ Vistos</div>\n\n            </nav>\n        );\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Appbar from './components/Appbar';\nimport MyList from './components/MyList';\nimport capitao_img from './img/capitc3a3o-fantc3a1stico1.png';\nimport corra_img from './img/images1.png'\nimport AddFilmesModal from './components/AddFilmesModal';\nimport CategoriasModal from './components/CategoriasModal';\n\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      addfilmes_modal: false,\n      filmes: [\n        {\n            id: 0,\n            titulo: 'CapitÃ£o FantÃ¡stico',\n            descricao: 'Nas florestas do estado de Washington, um pai cria seus seis filhos longe da civilizaÃ§Ã£o, em uma rÃ­gida rotina de aventuras. Ele Ã© forÃ§ado a deixar o isolamento e leva sua famÃ­lia para encarar o mundo, desafiando sua ideia do que significa ser pai.',\n            status: 'quero ver',\n            img_path: capitao_img,\n            nota: 5.0,\n        },\n        {\n            id: 1,\n            titulo: 'Corra!',\n            descricao: 'Um jovem fotÃ³grafo descobre um segredo sombrio quando conhece os pais aparentemente amigÃ¡veis da sua namorada.',\n            status: 'quero ver',\n            img_path: corra_img,\n            nota: 2.0,\n        },\n        {\n          id: 2,\n          titulo: 'Era Uma Vez',\n          descricao: 'Um garoto da favela que trabalha num quiosque de uma prestigiosa praia do Rio de Janeiro se apaixona pela filha de um milionÃ¡rio. Eles seguem o romance apesar das objeÃ§Ãµes do pai da menina.',\n          status: 'ja vi',\n          img_path: 'https://enquantoocioso.files.wordpress.com/2008/08/eraumavez.jpg',\n          nota: 3.0,\n        },\n      ],\n\n      categoria: undefined,\n\n    }\n  }\n\n\n\n  clickChangeAddFilmeModal = () => {\n    this.setState({\n        add_filmes_modal: !this.state.add_filmes_modal\n    })\n  }\n\n  abrirModal = () => {\n    return(\n        <AddFilmesModal\n          filmes_cont={this.state.filmes.length}\n          AddFilme={this.AddFilme}\n          cancelar={this.clickChangeAddFilmeModal}\n        />\n    );\n  }\n\n  fecharModal = () => {\n    return(\n      false\n    );\n  }\n\n  AddFilme = (n_filme) => {\n    this.setState({\n      filmes: this.state.filmes.concat(n_filme)\n    });\n  }\n\n  changeCategoriaModal = () => {\n    this.setState({\n        categorias_modal: !this.state.categorias_modal\n    })\n  } \n\n  renderModal = () => {\n    switch(this.state.categorias_modal){\n        case true: return (\n          <CategoriasModal\n            mostrarNVistos={this.mostrarNVistos}\n            mostrarJaVistos={this.mostrarJaVistos}\n          />\n        );\n        case false: return;\n    }\n  }\n\n  mostrarJaVistos = () => {\n    this.setState({\n      categoria: \"ja vi\"\n    })\n  }\n\n  mostrarNVistos = () => {\n    this.setState({\n      categoria: \"quero ver\"\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <body>\n        { this.state.add_filmes_modal ? this.abrirModal() : this.fecharModal() }\n        <Appbar\n          renderModal={this.renderModal}\n          changeCategoriaModal={this.changeCategoriaModal}\n          changeAddFilmeModal={this.clickChangeAddFilmeModal}\n        />\n\n          <div className=\"capa\"></div>\n          <MyList categoria={this.state.categoria} filmes={this.state.filmes}/>\n\n        </body>\n      </div>\n    );\n  }\n\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}